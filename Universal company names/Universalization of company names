import pandas as pd
from sklearn.cluster import AgglomerativeClustering
from sklearn.feature_extraction.text import TfidfVectorizer
import numpy as np
from sklearn.cluster import AffinityPropagation

data = pd.read_excel(***.xlsx)

data.columns = ['Номер','Фирма']

data['Название_2'] = data['Фирма'].str.lower()
data['Название_2'] = data['Фирма'].str.replace('[^\w\s]', '', regex=True)
data.dropna(subset=['Название_2'], inplace=True)  # Удаление отсутствующих значений

vectorizer = TfidfVectorizer(analyzer='word', stop_words=None, token_pattern=r"(?u)\b\w+\b")
tfidf_matrix = vectorizer.fit_transform(data['Фирма'])

# Кластеризация с использованием евклидового расстояния
clustering = AgglomerativeClustering(n_clusters=None, linkage='average', affinity='euclidean', distance_threshold=0.5)
data['Cluster'] = clustering.fit_predict(tfidf_matrix.toarray())

# Выбор представительного наименования для каждого кластера
representative_names = data.groupby('Cluster')['Название_2'].agg(lambda x: x.value_counts().idxmax()).reset_index()

# Создание нового столбца с одинаковыми наименованиями
data = data.merge(representative_names, on='Cluster', suffixes=('', '_representative'))
data.rename(columns={'Название_2_representative': 'RepresentativeName'}, inplace=True)

# Вывод результата
print(data[['Номер','Фирма', 'Название_2', 'RepresentativeName']])
